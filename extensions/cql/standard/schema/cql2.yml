---
openapi: 3.0.3
info:
  title: Schema of Common Query Language (CQL2)
  description: 'For use in OpenAPI 3.0 documents. TODO: This document is outdated and needs to be synchronized with cql2.json.'
  version: '1.0.0-draft.1'
paths: {}
components:
  schemas:
    booleanValueExpression:
      type: object
      oneOf:
      - "$ref": "#/components/schemas/andExpression"
      - "$ref": "#/components/schemas/orExpression"
      - "$ref": "#/components/schemas/notExpression"
      - "$ref": "#/components/schemas/comparisonPredicate"
      - "$ref": "#/components/schemas/spatialPredicate"
      - "$ref": "#/components/schemas/temporalPredicate"
      - "$ref": "#/components/schemas/arrayPredicate"
    andExpression:
      type: object
      required:
      - and
      properties:
        and:
          type: array
          minItems: 2
          items:
            "$ref": "#/components/schemas/booleanValueExpression"
    orExpression:
      type: object
      required:
      - or
      properties:
        or:
          type: array
          minItems: 2
          items:
            "$ref": "#/components/schemas/booleanValueExpression"
    notExpression:
      type: object
      required:
      - not
      properties:
        not:
          type: array
          minItems: 1
          maxItems: 1
          items:
            "$ref": "#/components/schemas/booleanValueExpression"
    comparisonPredicate:
      oneOf:
      - "$ref": "#/components/schemas/binaryComparisonPredicate"
      - "$ref": "#/components/schemas/isLikePredicate"
      - "$ref": "#/components/schemas/isBetweenPredicate"
      - "$ref": "#/components/schemas/isInListPredicate"
      - "$ref": "#/components/schemas/isNullPredicate"
    binaryComparisonPredicate:
      oneOf:
      - "$ref": "#/components/schemas/eqExpression"
      - "$ref": "#/components/schemas/ltExpression"
      - "$ref": "#/components/schemas/gtExpression"
      - "$ref": "#/components/schemas/lteExpression"
      - "$ref": "#/components/schemas/gteExpression"
    eqExpression:
      type: object
      required:
      - eq
      properties:
        eq:
          "$ref": "#/components/schemas/scalarOperands"
    ltExpression:
      type: object
      required:
      - lt
      properties:
        lt:
          "$ref": "#/components/schemas/scalarOperands"
    gtExpression:
      type: object
      required:
      - gt
      properties:
        gt:
          "$ref": "#/components/schemas/scalarOperands"
    lteExpression:
      type: object
      required:
      - lte
      properties:
        lte:
          "$ref": "#/components/schemas/scalarOperands"
    gteExpression:
      type: object
      required:
      - gte
      properties:
        gte:
          "$ref": "#/components/schemas/scalarOperands"
    isBetweenPredicate:
      type: object
      required:
      - between
      properties:
        between:
          type: object
          required:
          - value
          - lower
          - upper
          properties:
            value:
              "$ref": "#/components/schemas/valueExpression"
            lower:
              "$ref": "#/components/schemas/scalarExpression"
            upper:
              "$ref": "#/components/schemas/scalarExpression"
    isLikePredicate:
      type: object
      required: like
      properties:
        like:
          type: object
          required: 
            - value
            - pattern
          properties:
             value:
               "$ref": "#/components/schemas/scalarOperands"
             pattern:
               type: string
    isInListPredicate:
      type: object
      required:
      - in
      properties:
        in:
          type: object
          required:
          - value
          - list
          properties:
            value:
              "$ref": "#/components/schemas/valueExpression"
            list:
              type: array
              items:
                "$ref": "#/components/schemas/valueExpression"
    valueExpression:
      oneOf:
      - "$ref": "#/components/schemas/scalarExpression"
      - "$ref": "#/components/schemas/spatialLiteral"
      - "$ref": "#/components/schemas/typedTemporalLiteral"
    scalarOperands:
      type: array
      minItems: 2
      maxItems: 2
      items:
        "$ref": "#/components/schemas/scalarExpression"
    scalarExpression:
      oneOf:
      - "$ref": "#/components/schemas/scalarLiteral"
      - "$ref": "#/components/schemas/propertyRef"
      - "$ref": "#/components/schemas/functionRef"
      - "$ref": "#/components/schemas/arithmeticExpression"
    isNullPredicate:
      type: object
      required:
      - isNull
      properties:
        isNull:
          "$ref": "#/components/schemas/scalarExpression"
    spatialPredicate:
      oneOf:
      - "$ref": "#/components/schemas/s_containsExpression"
      - "$ref": "#/components/schemas/s_crossesExpression"
      - "$ref": "#/components/schemas/s_disjointExpression"
      - "$ref": "#/components/schemas/s_equalsExpression"
      - "$ref": "#/components/schemas/s_intersectsExpression"
      - "$ref": "#/components/schemas/s_overlapsExpression"
      - "$ref": "#/components/schemas/s_touchesExpression"
      - "$ref": "#/components/schemas/s_withinExpression"
    s_containsExpression:
      type: object
      required:
      - s_contains
      properties:
        s_contains:
          "$ref": "#/components/schemas/spatialOperands"
    s_crossesExpression:
      type: object
      required:
      - s_crosses
      properties:
        s_crosses:
          "$ref": "#/components/schemas/spatialOperands"
    s_disjointExpression:
      type: object
      required:
      - s_disjoint
      properties:
        s_disjoint:
          "$ref": "#/components/schemas/spatialOperands"
    s_equalsExpression:
      type: object
      required:
      - s_equals
      properties:
        s_equals:
          "$ref": "#/components/schemas/spatialOperands"
    s_intersectsExpression:
      type: object
      required:
      - s_intersects
      properties:
        s_intersects:
          "$ref": "#/components/schemas/spatialOperands"
    s_overlapsExpression:
      type: object
      required:
      - s_overlaps
      properties:
        s_overlaps:
          "$ref": "#/components/schemas/spatialOperands"
    s_touchesExpression:
      type: object
      required:
      - s_touches
      properties:
        s_touches:
          "$ref": "#/components/schemas/spatialOperands"
    s_withinExpression:
      type: object
      required:
      - s_within
      properties:
        s_within:
          "$ref": "#/components/schemas/spatialOperands"
    spatialOperands:
      type: array
      minItems: 2
      maxItems: 2
      items:
        "$ref": "#/components/schemas/geomExpression"
    geomExpression:
      oneOf:
      - "$ref": "#/components/schemas/spatialLiteral"
      - "$ref": "#/components/schemas/propertyRef"
      - "$ref": "#/components/schemas/functionRef"
    temporalPredicate:
      oneOf:
      - "$ref": "#/components/schemas/t_afterExpression"
      - "$ref": "#/components/schemas/t_beforeExpression"
      - "$ref": "#/components/schemas/t_containsExpression"
      - "$ref": "#/components/schemas/t_disjointExpression"
      - "$ref": "#/components/schemas/t_duringExpression"
      - "$ref": "#/components/schemas/t_equalsExpression"
      - "$ref": "#/components/schemas/t_finishedbyExpression"
      - "$ref": "#/components/schemas/t_finishesExpression"
      - "$ref": "#/components/schemas/t_intersectsExpression"
      - "$ref": "#/components/schemas/t_meetsExpression"
      - "$ref": "#/components/schemas/t_metbyExpression"
      - "$ref": "#/components/schemas/t_overlappedbyExpression"
      - "$ref": "#/components/schemas/t_overlapsExpression"
      - "$ref": "#/components/schemas/t_startedbyExpression"
      - "$ref": "#/components/schemas/t_startsExpression"
    t_afterExpression:
      type: object
      required:
      - t_after
      properties:
        t_after:
          "$ref": "#/components/schemas/temporalOperands"
    t_beforeExpression:
      type: object
      required:
      - t_before
      properties:
        t_before:
          "$ref": "#/components/schemas/temporalOperands"
    t_containsExpression:
      type: object
      required:
      - t_contains
      properties:
        t_contains:
          "$ref": "#/components/schemas/temporalOperands"
    t_disjointExpression:
      type: object
      required:
      - t_disjoint
      properties:
        t_disjoint:
          "$ref": "#/components/schemas/temporalOperands"
    t_duringExpression:
      type: object
      required:
      - t_during
      properties:
        t_during:
          "$ref": "#/components/schemas/temporalOperands"
    t_equalsExpression:
      type: object
      required:
      - t_equals
      properties:
        t_equals:
          "$ref": "#/components/schemas/temporalOperands"
    t_finishedbyExpression:
      type: object
      required:
      - t_finishedby
      properties:
        t_finishedby:
          "$ref": "#/components/schemas/temporalOperands"
    t_finishesExpression:
      type: object
      required:
      - t_finishes
      properties:
        t_finishes:
          "$ref": "#/components/schemas/temporalOperands"
    t_intersectsExpression:
      type: object
      required:
      - t_intersects
      properties:
        t_intersects:
          "$ref": "#/components/schemas/temporalOperands"
    t_meetsExpression:
      type: object
      required:
      - t_meets
      properties:
        t_meets:
          "$ref": "#/components/schemas/temporalOperands"
    t_metbyExpression:
      type: object
      required:
      - t_metby
      properties:
        t_metby:
          "$ref": "#/components/schemas/temporalOperands"
    t_overlappedbyExpression:
      type: object
      required:
      - t_overlappedby
      properties:
        t_overlappedby:
          "$ref": "#/components/schemas/temporalOperands"
    t_overlapsExpression:
      type: object
      required:
      - t_overlaps
      properties:
        t_overlaps:
          "$ref": "#/components/schemas/temporalOperands"
    t_startedbyExpression:
      type: object
      required:
      - t_startedby
      properties:
        t_startedby:
          "$ref": "#/components/schemas/temporalOperands"
    t_startsExpression:
      type: object
      required:
      - t_starts
      properties:
        t_starts:
          "$ref": "#/components/schemas/temporalOperands"
    temporalOperands:
      type: array
      minItems: 2
      maxItems: 2
      items:
        "$ref": "#/components/schemas/temporalExpression"
    temporalExpression:
      oneOf:
      - "$ref": "#/components/schemas/temporalLiteral"
      - "$ref": "#/components/schemas/propertyRef"
      - "$ref": "#/components/schemas/functionRef"
    arrayPredicate:
      oneOf:
      - "$ref": "#/components/schemas/a_containedByExpression"
      - "$ref": "#/components/schemas/a_containsExpression"
      - "$ref": "#/components/schemas/a_equalsExpression"
      - "$ref": "#/components/schemas/a_overlapsExpression"
    a_containedByExpression:
      type: object
      required:
      - a_containedBy
      properties:
        a_containedBy:
          "$ref": "#/components/schemas/arrayExpression"
    a_containsExpression:
      type: object
      required:
      - a_contains
      properties:
        a_contains:
          "$ref": "#/components/schemas/arrayExpression"
    a_equalsExpression:
      type: object
      required:
      - a_equals
      properties:
        a_equals:
          "$ref": "#/components/schemas/arrayExpression"
    a_overlapsExpression:
      type: object
      required:
      - a_overlaps
      properties:
        a_overlaps:
          "$ref": "#/components/schemas/arrayExpression"
    arrayExpression:
      type: array
      minItems: 2
      maxItems: 2
      items:
        oneOf:
        - "$ref": "#/components/schemas/propertyRef"
        - "$ref": "#/components/schemas/functionRef"
        - "$ref": "#/components/schemas/arrayLiteral"
    arrayLiteral:
      type: array
      items:
        oneOf:
        - "$ref": "#/components/schemas/scalarLiteral"
        - "$ref": "#/components/schemas/spatialLiteral"
        - "$ref": "#/components/schemas/typedTemporalLiteral"
        - "$ref": "#/components/schemas/propertyRef"
        - "$ref": "#/components/schemas/functionRef"
        - "$ref": "#/components/schemas/arithmeticExpression"
        - "$ref": "#/components/schemas/arrayLiteral"
    arithmeticExpression:
      oneOf:
      - "$ref": "#/components/schemas/addExpression"
      - "$ref": "#/components/schemas/subExpression"
      - "$ref": "#/components/schemas/mulExpression"
      - "$ref": "#/components/schemas/divExpression"
    addExpression:
      type: object
      required:
      - "+"
      properties:
        "+":
          "$ref": "#/components/schemas/arithmeticOperands"
    subExpression:
      type: object
      required:
      - "-"
      properties:
        "-":
          "$ref": "#/components/schemas/arithmeticOperands"
    mulExpression:
      type: object
      required:
      - "*"
      properties:
        "*":
          "$ref": "#/components/schemas/arithmeticOperands"
    divExpression:
      type: object
      required:
      - "/"
      properties:
        "/":
          "$ref": "#/components/schemas/arithmeticOperands"
    arithmeticOperands:
      type: array
      minItems: 2
      maxItems: 2
      items:
        oneOf:
        - "$ref": "#/components/schemas/arithmeticExpression"
        - "$ref": "#/components/schemas/propertyRef"
        - "$ref": "#/components/schemas/functionRef"
        - type: number
    propertyRef:
      oneOf:
      - type: object
        required:
        - property
        properties:
          property:
            type: string
      - type: object
        required: upper
        properties:
          upper:
            "$ref": "#/components/schemas/propertyRef"
        additionalProperties: false
      - type: object
        required: lower
        properties:
          lower:
            "$ref": "#/components/schemas/propertyRef"
        additionalProperties: false
    functionRef:
      oneOf:
      - type: object
        required:
        - function
        properties:
          function:
            "$ref": "#/components/schemas/function"
      - type: object
        required: upper
        properties:
          upper:
            "$ref": "#/components/schemas/functionRef"
        additionalProperties: false
      - type: object
        required: lower
        properties:
          lower:
            "$ref": "#/components/schemas/functionRef"
        additionalProperties: false
    function:
      type: object
      required:
      - name
      properties:
        name:
          type: string
        arguments:
          type: array
          items:
            oneOf:
            - "$ref": "#/components/schemas/scalarLiteral"
            - "$ref": "#/components/schemas/spatialLiteral"
            - "$ref": "#/components/schemas/typedTemporalLiteral"
            - "$ref": "#/components/schemas/propertyRef"
            - "$ref": "#/components/schemas/functionRef"
            - "$ref": "#/components/schemas/arithmeticExpression"
            - "$ref": "#/components/schemas/arrayLiteral"
    scalarLiteral:
      oneOf:
      - type: string
      - type: number
      - type: boolean
      - type: object
        required: upper
        properties:
          upper:
            type: string
      - type: object
        required: lower
        properties:
          lower:
            type: string
    spatialLiteral:
      oneOf:
      - "$ref": "#/components/schemas/geometryLiteral"
      - "$ref": "#/components/schemas/envelopeLiteral"
    geometryLiteral:
      oneOf:
      - "$ref": "#/components/schemas/point"
      - "$ref": "#/components/schemas/linestring"
      - "$ref": "#/components/schemas/polygon"
      - "$ref": "#/components/schemas/multipoint"
      - "$ref": "#/components/schemas/multilinestring"
      - "$ref": "#/components/schemas/multipolygon"
    geojson-bbox:
       type: array
       minItems: 4
       maxItems: 4
       items:
          type: number
    point:
      title: GeoJSON Point
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - Point
        coordinates:
          type: array
          minItems: 2
          items:
            type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    linestring:
      title: GeoJSON LineString
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - LineString
        coordinates:
          type: array
          minItems: 2
          items:
            type: array
            minItems: 2
            items:
              type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    polygon:
      title: GeoJSON Polygon
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              items:
                type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    multipoint:
      title: GeoJSON MultiPoint
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - MultiPoint
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    multilinestring:
      title: GeoJSON MultiLineString
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: array
              minItems: 2
              items:
                type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    multipolygon:
      title: GeoJSON MultiPolygon
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              minItems: 4
              items:
                type: array
                minItems: 2
                items:
                  type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    envelopeLiteral:
      type: object
      required:
      - bbox
      properties:
        bbox:
          "$ref": "#/components/schemas/bbox"
    bbox:
      type: array
      oneOf:
      - minItems: 4
        maxItems: 4
      - minItems: 6
        maxItems: 6
      items:
        type: number
    temporalLiteral:
      oneOf:
      - "$ref": "#/components/schemas/instantString"
      - "$ref": "#/components/schemas/intervalString"
    instantString:
      oneOf:
      - type: string
        format: date
      - type: string
        format: date-time
    intervalString:
      type: array
      minItems: 2
      maxItems: 2
      items:
         oneOf:
         - type: string
           format: date
         - type: string
           format: date-time
         - type: string
           enum:
           - ..
    typedTemporalLiteral:
      oneOf:
      - "$ref": "#/components/schemas/typedInstantString"
      - "$ref": "#/components/schemas/typedIntervalString"
    typedInstantString:
      type: object
      required:
      - datetime
      properties:
        datetime:
          "$ref": "#/components/schemas/instantString"
    typedIntervalString:
      type: object
      required:
      - datetime
      properties:
        datetime:
          "$ref": "#/components/schemas/intervalString"
